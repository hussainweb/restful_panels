<?php
/**
 * @file
 * RESTful Panels module.
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function restful_panels_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'restful' || $owner == 'panels') {
    return 'plugins/' . $plugin_type;
  }

  return NULL;
}

/**
 * Custom implementation of ctools_content_render to support JSON.
 */
function restful_panels_ctools_content_render($type, $subtype, $conf, $keywords = array(), $args = array(), $context = array(), $incoming_content = '') {
  if (is_array($type)) {
    $plugin = $type;
  }
  else {
    $plugin = ctools_get_content_type($type);
  }

  $subtype_info = ctools_content_get_subtype($plugin, $subtype);

  // First check for a specific callback for structured information. If not
  // available, fallback to regular ctools behavior.
  // This is the only difference in this function compared to the original
  // ctools_content_render function. I don't like copying the rest of the code
  // but I can't figure out a better way.
  $function = ctools_plugin_get_function($subtype_info, 'json render callback');
  if (!$function) {
    $function = ctools_plugin_get_function($plugin, 'json render callback');
  }

  if (!$function) {
    $function = ctools_plugin_get_function($subtype_info, 'render callback');
    if (!$function) {
      $function = ctools_plugin_get_function($plugin, 'render callback');
    }
  }

  if ($function) {
    $pane_context = ctools_content_select_context($plugin, $subtype, $conf, $context);
    if ($pane_context === FALSE) {
      return;
    }

    $content = $function($subtype, $conf, $args, $pane_context, $incoming_content);

    if (empty($content)) {
      return;
    }

    // Set up some defaults and other massaging on the content before we hand
    // it back to the caller.
    if (!isset($content->type)) {
      $content->type = $plugin['name'];
    }

    if (!isset($content->subtype)) {
      $content->subtype = $subtype;
    }

    // Override the title if configured to
    if (!empty($conf['override_title'])) {
      // Give previous title as an available substitution here.
      $keywords['%title'] = empty($content->title) ? '' : $content->title;
      $content->original_title = $keywords['%title'];
      $content->title = $conf['override_title_text'];
      $content->title_heading = isset($conf['override_title_heading']) ? $conf['override_title_heading'] : 'h2';
    }

    if (!empty($content->title)) {
      // Perform substitutions
      if (!empty($keywords) || !empty($context)) {
        $content->title = ctools_context_keyword_substitute($content->title, $keywords, $context);
      }

      // Sterilize the title
      $content->title = filter_xss_admin($content->title);

      // If a link is specified, populate.
      if (!empty($content->title_link)) {
        if (!is_array($content->title_link)) {
          $url = array('href' => $content->title_link);
        }
        else {
          $url = $content->title_link;
        }
        // set defaults so we don't bring up notices
        $url += array('href' => '', 'attributes' => array(), 'query' => array(), 'fragment' => '', 'absolute' => NULL, 'html' => TRUE);
        $content->title = l($content->title, $url['href'], $url);
      }
    }

    return $content;
  }
}
